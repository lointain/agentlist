version: "3.8"

services:
  # LangGraph Worker
  worker-js:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        GIT_REPO: ${GIT_REPO}
    container_name: worker-${GRAPH_NAME}
    ports:
      - "3001:3001"
    # 从.env文件加载环境变量
    env_file:
      - .env
    environment:
      WORKER_GRAPHS: '{"${GRAPH_NAME}":"/app/user-graphs/${GRAPH_PATH}:${GRAPH_EXPORT}"}'
    volumes:
      # 挂载.env文件，便于动态修改
      - ./.env:/app/.env
      # 挂载langgraph.json配置文件，便于动态修改图配置
      - ./langgraph.json:/app/user-graphs/langgraph.json:ro
      # 挂载用户自定义的langgraph项目代码
      - ./:/app/user-graphs:ro
    # 移除对 postgres 和 redis 的依赖，因为它们是共享服务
    # depends_on:
    #   postgres:
    #     condition: service_healthy
    #   redis:
    #     condition: service_healthy
    networks:
      - langgraph-dev-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:${PORT}/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })",
        ]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

# 移除 postgres_data 和 redis_data 卷定义
# volumes:
#   postgres_data:
#   redis_data:

networks:
  langgraph-dev-network:
    driver: bridge
